name: Android CI Build & Test

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Create mock google-services.json
      run: |
        cat > app/google-services.json << 'EOF'
        {
          "project_info": {
            "project_number": "000000000000",
            "project_id": "mock-project-id"
          },
          "client": [
            {
              "client_info": {
                "mobilesdk_app_id": "1:000000000000:android:0000000000000000000000",
                "android_client_info": {
                  "package_name": "com.example.budgetbuddy"
                }
              },
              "oauth_client": [],
              "api_key": [
                {
                  "current_key": "mock-api-key"
                }
              ],
              "services": {
                "appinvite_service": {
                  "other_platform_oauth_client": []
                }
              }
            }
          ],
          "configuration_version": "1"
        }
        EOF

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Clean project
      run: ./gradlew clean

    - name: Run unit tests
      run: ./gradlew testDebugUnitTest --continue --stacktrace

    - name: Verify test results exist
      run: |
        if [ ! -d "app/build/reports/tests/testDebugUnitTest" ]; then
          echo "Test reports directory not found!"
          exit 1
        fi
        echo "✅ Unit tests completed successfully"

    - name: Upload unit test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: app/build/reports/tests/testDebugUnitTest/

  lint:
    name: Run Lint Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Create mock google-services.json
      run: |
        cat > app/google-services.json << 'EOF'
        {
          "project_info": {
            "project_number": "000000000000",
            "project_id": "mock-project-id"
          },
          "client": [
            {
              "client_info": {
                "mobilesdk_app_id": "1:000000000000:android:0000000000000000000000",
                "android_client_info": {
                  "package_name": "com.example.budgetbuddy"
                }
              },
              "oauth_client": [],
              "api_key": [
                {
                  "current_key": "mock-api-key"
                }
              ],
              "services": {
                "appinvite_service": {
                  "other_platform_oauth_client": []
                }
              }
            }
          ],
          "configuration_version": "1"
        }
        EOF

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Run lint checks
      run: ./gradlew lintDebug --continue --stacktrace

    - name: Verify lint results exist
      run: |
        if [ ! -f "app/build/reports/lint-results-debug.html" ]; then
          echo "Lint results file not found!"
          exit 1
        fi
        echo "✅ Lint analysis completed successfully"

    - name: Upload lint results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results
        path: app/build/reports/lint-results-debug.html

  build:
    name: Build Debug APK
    needs: [test, lint]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Create mock google-services.json
      run: |
        cat > app/google-services.json << 'EOF'
        {
          "project_info": {
            "project_number": "000000000000",
            "project_id": "mock-project-id"
          },
          "client": [
            {
              "client_info": {
                "mobilesdk_app_id": "1:000000000000:android:0000000000000000000000",
                "android_client_info": {
                  "package_name": "com.example.budgetbuddy"
                }
              },
              "oauth_client": [],
              "api_key": [
                {
                  "current_key": "mock-api-key"
                }
              ],
              "services": {
                "appinvite_service": {
                  "other_platform_oauth_client": []
                }
              }
            }
          ],
          "configuration_version": "1"
        }
        EOF

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Build debug APK
      run: ./gradlew assembleDebug --stacktrace

    - name: Verify APK was created
      run: |
        if [ ! -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
          echo "APK file not found!"
          exit 1
        fi
        echo "✅ APK build completed successfully"
        ls -la app/build/outputs/apk/debug/

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: budgetbuddy-debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
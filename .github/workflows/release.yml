name: Release Build & Deploy

on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0
  workflow_dispatch: # Allow manual triggering

jobs:
  test:
    name: Run All Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run unit tests
      run: ./gradlew testDebugUnitTest

    - name: Run lint checks
      run: ./gradlew lintDebug

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: release-test-results
        path: |
          app/build/reports/tests/
          app/build/reports/lint-results-debug.html

  build-release:
    name: Build Release APK
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build release APK
      run: ./gradlew assembleRelease

    - name: Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: budgetbuddy-release-apk
        path: app/build/outputs/apk/release/app-release.apk

    - name: Create release notes
      run: |
        echo "## BudgetBuddy Release Notes" > release_notes.md
        echo "" >> release_notes.md
        echo "### Changes in this release:" >> release_notes.md
        echo "- Bug fixes and performance improvements" >> release_notes.md
        echo "- Enhanced user interface" >> release_notes.md
        echo "- Updated Firebase integration" >> release_notes.md
        echo "" >> release_notes.md
        echo "### App Features:" >> release_notes.md
        echo "- ✅ Expense tracking with categories" >> release_notes.md
        echo "- ✅ Monthly budget management" >> release_notes.md
        echo "- ✅ Reports and analytics" >> release_notes.md
        echo "- ✅ Achievement system" >> release_notes.md
        echo "- ✅ Firebase cloud sync" >> release_notes.md

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: BudgetBuddy ${{ github.ref }}
        body_path: release_notes.md
        draft: false
        prerelease: false

  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: java

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build for CodeQL
      run: ./gradlew assembleDebug

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  performance-test:
    name: Performance Testing
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run performance tests
      run: ./gradlew connectedDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=com.example.budgetbuddy.PerformanceTest

    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-test-results
        path: app/build/reports/androidTests/ 